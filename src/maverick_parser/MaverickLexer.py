# Generated from /Users/songyang/Desktop/buaa/课程/程序设计语言/Maverick/antlr/Maverick.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,68,514,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,
        1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,
        1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,
        1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,12,1,12,1,13,1,13,
        1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,
        1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,19,1,19,
        1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,
        1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,25,1,25,
        1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,
        1,29,1,29,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,32,1,33,1,33,
        1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,
        1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,44,
        1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,47,1,47,1,48,1,48,1,48,1,48,
        1,48,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,
        1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,
        1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,
        1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,
        1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,58,1,59,
        1,59,5,59,389,8,59,10,59,12,59,392,9,59,1,60,1,60,1,60,5,60,397,
        8,60,10,60,12,60,400,9,60,1,60,1,60,1,61,1,61,1,61,5,61,407,8,61,
        10,61,12,61,410,9,61,1,61,1,61,1,62,4,62,415,8,62,11,62,12,62,416,
        1,63,1,63,1,63,4,63,422,8,63,11,63,12,63,423,1,64,4,64,427,8,64,
        11,64,12,64,428,1,64,1,64,5,64,433,8,64,10,64,12,64,436,9,64,1,64,
        3,64,439,8,64,1,64,1,64,4,64,443,8,64,11,64,12,64,444,1,64,3,64,
        448,8,64,1,64,4,64,451,8,64,11,64,12,64,452,1,64,1,64,3,64,457,8,
        64,1,65,1,65,3,65,461,8,65,1,65,4,65,464,8,65,11,65,12,65,465,1,
        66,1,66,1,66,1,66,3,66,472,8,66,1,66,3,66,475,8,66,1,67,1,67,1,68,
        1,68,1,69,1,69,1,70,1,70,1,70,1,70,1,70,5,70,488,8,70,10,70,12,70,
        491,9,70,1,70,1,70,1,70,1,70,1,70,1,70,1,71,1,71,5,71,501,8,71,10,
        71,12,71,504,9,71,1,71,1,71,1,72,4,72,509,8,72,11,72,12,72,510,1,
        72,1,72,0,0,73,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
        22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,
        33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,
        44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,
        54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,
        127,64,129,65,131,0,133,0,135,0,137,0,139,0,141,66,143,67,145,68,
        1,0,12,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,34,
        34,92,92,2,0,39,39,92,92,2,0,88,88,120,120,2,0,69,69,101,101,2,0,
        43,43,45,45,11,0,34,36,39,39,92,92,97,98,102,102,110,110,114,114,
        116,116,118,118,122,122,124,124,1,0,48,57,3,0,48,57,65,70,97,102,
        4,0,10,10,13,13,133,133,8232,8233,3,0,9,10,12,13,32,32,530,0,1,1,
        0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
        0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,
        0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,
        0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,
        0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,
        0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
        0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,
        0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,
        0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,
        0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,
        0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,
        1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,
        0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,
        0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,1,147,1,0,0,0,3,
        149,1,0,0,0,5,151,1,0,0,0,7,157,1,0,0,0,9,160,1,0,0,0,11,164,1,0,
        0,0,13,171,1,0,0,0,15,177,1,0,0,0,17,180,1,0,0,0,19,185,1,0,0,0,
        21,192,1,0,0,0,23,197,1,0,0,0,25,201,1,0,0,0,27,203,1,0,0,0,29,212,
        1,0,0,0,31,214,1,0,0,0,33,216,1,0,0,0,35,223,1,0,0,0,37,225,1,0,
        0,0,39,227,1,0,0,0,41,231,1,0,0,0,43,237,1,0,0,0,45,242,1,0,0,0,
        47,246,1,0,0,0,49,253,1,0,0,0,51,255,1,0,0,0,53,257,1,0,0,0,55,261,
        1,0,0,0,57,267,1,0,0,0,59,270,1,0,0,0,61,274,1,0,0,0,63,276,1,0,
        0,0,65,278,1,0,0,0,67,281,1,0,0,0,69,284,1,0,0,0,71,287,1,0,0,0,
        73,290,1,0,0,0,75,292,1,0,0,0,77,294,1,0,0,0,79,296,1,0,0,0,81,298,
        1,0,0,0,83,300,1,0,0,0,85,302,1,0,0,0,87,304,1,0,0,0,89,306,1,0,
        0,0,91,309,1,0,0,0,93,312,1,0,0,0,95,316,1,0,0,0,97,318,1,0,0,0,
        99,323,1,0,0,0,101,328,1,0,0,0,103,336,1,0,0,0,105,340,1,0,0,0,107,
        346,1,0,0,0,109,351,1,0,0,0,111,358,1,0,0,0,113,364,1,0,0,0,115,
        373,1,0,0,0,117,380,1,0,0,0,119,386,1,0,0,0,121,393,1,0,0,0,123,
        403,1,0,0,0,125,414,1,0,0,0,127,418,1,0,0,0,129,456,1,0,0,0,131,
        458,1,0,0,0,133,474,1,0,0,0,135,476,1,0,0,0,137,478,1,0,0,0,139,
        480,1,0,0,0,141,482,1,0,0,0,143,498,1,0,0,0,145,508,1,0,0,0,147,
        148,5,59,0,0,148,2,1,0,0,0,149,150,5,61,0,0,150,4,1,0,0,0,151,152,
        5,119,0,0,152,153,5,104,0,0,153,154,5,105,0,0,154,155,5,108,0,0,
        155,156,5,101,0,0,156,6,1,0,0,0,157,158,5,100,0,0,158,159,5,111,
        0,0,159,8,1,0,0,0,160,161,5,101,0,0,161,162,5,110,0,0,162,163,5,
        100,0,0,163,10,1,0,0,0,164,165,5,114,0,0,165,166,5,101,0,0,166,167,
        5,112,0,0,167,168,5,101,0,0,168,169,5,97,0,0,169,170,5,116,0,0,170,
        12,1,0,0,0,171,172,5,117,0,0,172,173,5,110,0,0,173,174,5,116,0,0,
        174,175,5,105,0,0,175,176,5,108,0,0,176,14,1,0,0,0,177,178,5,105,
        0,0,178,179,5,102,0,0,179,16,1,0,0,0,180,181,5,116,0,0,181,182,5,
        104,0,0,182,183,5,101,0,0,183,184,5,110,0,0,184,18,1,0,0,0,185,186,
        5,101,0,0,186,187,5,108,0,0,187,188,5,115,0,0,188,189,5,101,0,0,
        189,190,5,105,0,0,190,191,5,102,0,0,191,20,1,0,0,0,192,193,5,101,
        0,0,193,194,5,108,0,0,194,195,5,115,0,0,195,196,5,101,0,0,196,22,
        1,0,0,0,197,198,5,102,0,0,198,199,5,111,0,0,199,200,5,114,0,0,200,
        24,1,0,0,0,201,202,5,44,0,0,202,26,1,0,0,0,203,204,5,102,0,0,204,
        205,5,117,0,0,205,206,5,110,0,0,206,207,5,99,0,0,207,208,5,116,0,
        0,208,209,5,105,0,0,209,210,5,111,0,0,210,211,5,110,0,0,211,28,1,
        0,0,0,212,213,5,40,0,0,213,30,1,0,0,0,214,215,5,41,0,0,215,32,1,
        0,0,0,216,217,5,114,0,0,217,218,5,101,0,0,218,219,5,116,0,0,219,
        220,5,117,0,0,220,221,5,114,0,0,221,222,5,110,0,0,222,34,1,0,0,0,
        223,224,5,46,0,0,224,36,1,0,0,0,225,226,5,58,0,0,226,38,1,0,0,0,
        227,228,5,110,0,0,228,229,5,105,0,0,229,230,5,108,0,0,230,40,1,0,
        0,0,231,232,5,102,0,0,232,233,5,97,0,0,233,234,5,108,0,0,234,235,
        5,115,0,0,235,236,5,101,0,0,236,42,1,0,0,0,237,238,5,116,0,0,238,
        239,5,114,0,0,239,240,5,117,0,0,240,241,5,101,0,0,241,44,1,0,0,0,
        242,243,5,110,0,0,243,244,5,101,0,0,244,245,5,119,0,0,245,46,1,0,
        0,0,246,247,5,100,0,0,247,248,5,101,0,0,248,249,5,108,0,0,249,250,
        5,101,0,0,250,251,5,116,0,0,251,252,5,101,0,0,252,48,1,0,0,0,253,
        254,5,91,0,0,254,50,1,0,0,0,255,256,5,93,0,0,256,52,1,0,0,0,257,
        258,5,46,0,0,258,259,5,46,0,0,259,260,5,46,0,0,260,54,1,0,0,0,261,
        262,5,99,0,0,262,263,5,108,0,0,263,264,5,97,0,0,264,265,5,115,0,
        0,265,266,5,115,0,0,266,56,1,0,0,0,267,268,5,111,0,0,268,269,5,114,
        0,0,269,58,1,0,0,0,270,271,5,97,0,0,271,272,5,110,0,0,272,273,5,
        100,0,0,273,60,1,0,0,0,274,275,5,60,0,0,275,62,1,0,0,0,276,277,5,
        62,0,0,277,64,1,0,0,0,278,279,5,60,0,0,279,280,5,61,0,0,280,66,1,
        0,0,0,281,282,5,62,0,0,282,283,5,61,0,0,283,68,1,0,0,0,284,285,5,
        33,0,0,285,286,5,61,0,0,286,70,1,0,0,0,287,288,5,61,0,0,288,289,
        5,61,0,0,289,72,1,0,0,0,290,291,5,43,0,0,291,74,1,0,0,0,292,293,
        5,45,0,0,293,76,1,0,0,0,294,295,5,42,0,0,295,78,1,0,0,0,296,297,
        5,47,0,0,297,80,1,0,0,0,298,299,5,37,0,0,299,82,1,0,0,0,300,301,
        5,38,0,0,301,84,1,0,0,0,302,303,5,124,0,0,303,86,1,0,0,0,304,305,
        5,126,0,0,305,88,1,0,0,0,306,307,5,60,0,0,307,308,5,60,0,0,308,90,
        1,0,0,0,309,310,5,62,0,0,310,311,5,62,0,0,311,92,1,0,0,0,312,313,
        5,110,0,0,313,314,5,111,0,0,314,315,5,116,0,0,315,94,1,0,0,0,316,
        317,5,35,0,0,317,96,1,0,0,0,318,319,5,118,0,0,319,320,5,111,0,0,
        320,321,5,105,0,0,321,322,5,100,0,0,322,98,1,0,0,0,323,324,5,98,
        0,0,324,325,5,121,0,0,325,326,5,116,0,0,326,327,5,101,0,0,327,100,
        1,0,0,0,328,329,5,98,0,0,329,330,5,111,0,0,330,331,5,111,0,0,331,
        332,5,108,0,0,332,333,5,101,0,0,333,334,5,97,0,0,334,335,5,110,0,
        0,335,102,1,0,0,0,336,337,5,105,0,0,337,338,5,110,0,0,338,339,5,
        116,0,0,339,104,1,0,0,0,340,341,5,102,0,0,341,342,5,108,0,0,342,
        343,5,111,0,0,343,344,5,97,0,0,344,345,5,116,0,0,345,106,1,0,0,0,
        346,347,5,99,0,0,347,348,5,104,0,0,348,349,5,97,0,0,349,350,5,114,
        0,0,350,108,1,0,0,0,351,352,5,115,0,0,352,353,5,116,0,0,353,354,
        5,114,0,0,354,355,5,105,0,0,355,356,5,110,0,0,356,357,5,103,0,0,
        357,110,1,0,0,0,358,359,5,98,0,0,359,360,5,114,0,0,360,361,5,101,
        0,0,361,362,5,97,0,0,362,363,5,107,0,0,363,112,1,0,0,0,364,365,5,
        99,0,0,365,366,5,111,0,0,366,367,5,110,0,0,367,368,5,116,0,0,368,
        369,5,105,0,0,369,370,5,110,0,0,370,371,5,117,0,0,371,372,5,101,
        0,0,372,114,1,0,0,0,373,374,5,112,0,0,374,375,5,114,0,0,375,376,
        5,105,0,0,376,377,5,110,0,0,377,378,5,116,0,0,378,379,5,102,0,0,
        379,116,1,0,0,0,380,381,5,115,0,0,381,382,5,99,0,0,382,383,5,97,
        0,0,383,384,5,110,0,0,384,385,5,102,0,0,385,118,1,0,0,0,386,390,
        7,0,0,0,387,389,7,1,0,0,388,387,1,0,0,0,389,392,1,0,0,0,390,388,
        1,0,0,0,390,391,1,0,0,0,391,120,1,0,0,0,392,390,1,0,0,0,393,398,
        5,34,0,0,394,397,3,133,66,0,395,397,8,2,0,0,396,394,1,0,0,0,396,
        395,1,0,0,0,397,400,1,0,0,0,398,396,1,0,0,0,398,399,1,0,0,0,399,
        401,1,0,0,0,400,398,1,0,0,0,401,402,5,34,0,0,402,122,1,0,0,0,403,
        408,5,39,0,0,404,407,3,133,66,0,405,407,8,3,0,0,406,404,1,0,0,0,
        406,405,1,0,0,0,407,410,1,0,0,0,408,406,1,0,0,0,408,409,1,0,0,0,
        409,411,1,0,0,0,410,408,1,0,0,0,411,412,5,39,0,0,412,124,1,0,0,0,
        413,415,3,135,67,0,414,413,1,0,0,0,415,416,1,0,0,0,416,414,1,0,0,
        0,416,417,1,0,0,0,417,126,1,0,0,0,418,419,5,48,0,0,419,421,7,4,0,
        0,420,422,3,137,68,0,421,420,1,0,0,0,422,423,1,0,0,0,423,421,1,0,
        0,0,423,424,1,0,0,0,424,128,1,0,0,0,425,427,3,135,67,0,426,425,1,
        0,0,0,427,428,1,0,0,0,428,426,1,0,0,0,428,429,1,0,0,0,429,430,1,
        0,0,0,430,434,5,46,0,0,431,433,3,135,67,0,432,431,1,0,0,0,433,436,
        1,0,0,0,434,432,1,0,0,0,434,435,1,0,0,0,435,438,1,0,0,0,436,434,
        1,0,0,0,437,439,3,131,65,0,438,437,1,0,0,0,438,439,1,0,0,0,439,457,
        1,0,0,0,440,442,5,46,0,0,441,443,3,135,67,0,442,441,1,0,0,0,443,
        444,1,0,0,0,444,442,1,0,0,0,444,445,1,0,0,0,445,447,1,0,0,0,446,
        448,3,131,65,0,447,446,1,0,0,0,447,448,1,0,0,0,448,457,1,0,0,0,449,
        451,3,135,67,0,450,449,1,0,0,0,451,452,1,0,0,0,452,450,1,0,0,0,452,
        453,1,0,0,0,453,454,1,0,0,0,454,455,3,131,65,0,455,457,1,0,0,0,456,
        426,1,0,0,0,456,440,1,0,0,0,456,450,1,0,0,0,457,130,1,0,0,0,458,
        460,7,5,0,0,459,461,7,6,0,0,460,459,1,0,0,0,460,461,1,0,0,0,461,
        463,1,0,0,0,462,464,3,135,67,0,463,462,1,0,0,0,464,465,1,0,0,0,465,
        463,1,0,0,0,465,466,1,0,0,0,466,132,1,0,0,0,467,468,5,92,0,0,468,
        475,7,7,0,0,469,471,5,92,0,0,470,472,5,13,0,0,471,470,1,0,0,0,471,
        472,1,0,0,0,472,473,1,0,0,0,473,475,5,10,0,0,474,467,1,0,0,0,474,
        469,1,0,0,0,475,134,1,0,0,0,476,477,7,8,0,0,477,136,1,0,0,0,478,
        479,7,9,0,0,479,138,1,0,0,0,480,481,8,10,0,0,481,140,1,0,0,0,482,
        483,5,34,0,0,483,484,5,34,0,0,484,485,5,34,0,0,485,489,1,0,0,0,486,
        488,9,0,0,0,487,486,1,0,0,0,488,491,1,0,0,0,489,487,1,0,0,0,489,
        490,1,0,0,0,490,492,1,0,0,0,491,489,1,0,0,0,492,493,5,34,0,0,493,
        494,5,34,0,0,494,495,5,34,0,0,495,496,1,0,0,0,496,497,6,70,0,0,497,
        142,1,0,0,0,498,502,5,35,0,0,499,501,3,139,69,0,500,499,1,0,0,0,
        501,504,1,0,0,0,502,500,1,0,0,0,502,503,1,0,0,0,503,505,1,0,0,0,
        504,502,1,0,0,0,505,506,6,71,0,0,506,144,1,0,0,0,507,509,7,11,0,
        0,508,507,1,0,0,0,509,510,1,0,0,0,510,508,1,0,0,0,510,511,1,0,0,
        0,511,512,1,0,0,0,512,513,6,72,1,0,513,146,1,0,0,0,22,0,390,396,
        398,406,408,416,423,428,434,438,444,447,452,456,460,465,471,474,
        489,502,510,2,0,1,0,6,0,0
    ]

class MaverickLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    T__55 = 56
    T__56 = 57
    T__57 = 58
    T__58 = 59
    NAME = 60
    NORMALSTRING = 61
    CHARSTRING = 62
    INT = 63
    HEX = 64
    FLOAT = 65
    COMMENT = 66
    LINE_COMMENT = 67
    WS = 68

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'='", "'while'", "'do'", "'end'", "'repeat'", "'until'", 
            "'if'", "'then'", "'elseif'", "'else'", "'for'", "','", "'function'", 
            "'('", "')'", "'return'", "'.'", "':'", "'nil'", "'false'", 
            "'true'", "'new'", "'delete'", "'['", "']'", "'...'", "'class'", 
            "'or'", "'and'", "'<'", "'>'", "'<='", "'>='", "'!='", "'=='", 
            "'+'", "'-'", "'*'", "'/'", "'%'", "'&'", "'|'", "'~'", "'<<'", 
            "'>>'", "'not'", "'#'", "'void'", "'byte'", "'boolean'", "'int'", 
            "'float'", "'char'", "'string'", "'break'", "'continue'", "'printf'", 
            "'scanf'" ]

    symbolicNames = [ "<INVALID>",
            "NAME", "NORMALSTRING", "CHARSTRING", "INT", "HEX", "FLOAT", 
            "COMMENT", "LINE_COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", 
                  "T__56", "T__57", "T__58", "NAME", "NORMALSTRING", "CHARSTRING", 
                  "INT", "HEX", "FLOAT", "ExponentPart", "EscapeSequence", 
                  "Digit", "HexDigit", "SingleLineInputCharacter", "COMMENT", 
                  "LINE_COMMENT", "WS" ]

    grammarFileName = "Maverick.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


